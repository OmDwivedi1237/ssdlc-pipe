(()=>{var t={};t.id=177,t.ids=[177],t.modules={846:t=>{"use strict";t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},1820:t=>{"use strict";t.exports=require("os")},3033:t=>{"use strict";t.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},3295:t=>{"use strict";t.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},3873:t=>{"use strict";t.exports=require("path")},4870:t=>{"use strict";t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6487:()=>{},8335:()=>{},9021:t=>{"use strict";t.exports=require("fs")},9294:t=>{"use strict";t.exports=require("next/dist/server/app-render/work-async-storage.external.js")},9620:(t,e,i)=>{"use strict";i.r(e),i.d(e,{patchFetch:()=>M,routeModule:()=>J,serverHooks:()=>z,workAsyncStorage:()=>R,workUnitAsyncStorage:()=>q});var s={};i.r(s),i.d(s,{GET:()=>C,PUT:()=>I,dynamic:()=>_,runtime:()=>T});var a=i(6559),r=i(8088),n=i(7719),o=i(9748),c=i(3873),l=i.n(c),p=i(1820);let d=require("child_process"),u=require("net");var h=i(7501),y=(t,e="")=>Object.keys(t).reduce((i,s)=>{let a=e.length?e+".":"";return"object"!=typeof t[s]||null===t[s]||Array.isArray(t[s])?i[a+s]=t[s]:Object.assign(i,y(t[s],a+s)),i},{}),g=t=>{let e={};for(let i in t){let s=i.split("."),a=e;for(let e=0;e<s.length;e++){let r=s[e];e===s.length-1?a[r]=t[i]:(a[r]=a[r]||{},a=a[r])}}return e};function f(t){return t.replace(/[A-Z]/g,t=>`_${t.toLowerCase()}`)}var w={openaiApiKey:"",deepgramApiKey:"",aiModel:"gpt-4o",aiUrl:"https://api.openai.com/v1",customPrompt:"Rules:\n    - You can analyze/view/show/access videos to the user by putting .mp4 files in a code block (we'll render it) like this: `/users/video.mp4`, use the exact, absolute, file path from file_path property\n    - Do not try to embed video in links (e.g. [](.mp4) or https://.mp4) instead put the file_path in a code block using backticks\n    - Do not put video in multiline code block it will not render the video (e.g. ```bash\n.mp4``` IS WRONG) instead using inline code block with single backtick\n    - Always answer my question/intent, do not make up things\n    \n    ",port:3030,dataDir:"default",disableAudio:!1,ignoredWindows:[],includedWindows:[],aiProviderType:"openai",embeddedLLM:{enabled:!1,model:"llama3.2:1b-instruct-q4_K_M",port:11434},enableFrameCache:!0,enableUiMonitoring:!1,aiMaxContextChars:512e3,analyticsEnabled:!0,user:{token:""},customSettings:{},monitorIds:["default"],audioDevices:["default"],audioTranscriptionEngine:"whisper-large-v3-turbo",enableRealtimeAudioTranscription:!1,realtimeAudioTranscriptionEngine:"deepgram",disableVision:!1},m=class{settings;storePath;initialized=!1;constructor(){this.settings=w,this.storePath=""}async getStorePath(){let t=process.platform,e=p.homedir(),i;switch(t){case"darwin":i=c.join(e,"Library","Application Support","screenpipe");break;case"linux":let s=process.env.XDG_DATA_HOME||c.join(e,".local","share");i=c.join(s,"screenpipe");break;case"win32":i=c.join(process.env.LOCALAPPDATA||c.join(e,"AppData","Local"),"screenpipe");break;default:throw Error(`unsupported platform: ${t}`)}let a=c.join(i,"profiles.bin"),r="default";try{let t=await o.readFile(a),e=JSON.parse(t.toString());e.activeProfile&&(r=e.activeProfile)}catch{}return"default"===r?c.join(i,"store.bin"):c.join(i,`store-${r}.bin`)}async init(){if(!o||!c)throw Error("failed to load required modules");this.storePath=await this.getStorePath();try{await o.mkdir(c.dirname(this.storePath),{recursive:!0});let t=await o.readFile(this.storePath),e=JSON.parse(t.toString());this.settings={...w,...g(e)},this.initialized=!0}catch(t){if("ENOENT"===t.code)await this.save(),this.initialized=!0;else throw t}}async save(){await o.mkdir(c.dirname(this.storePath),{recursive:!0});let t=y(this.settings);await o.writeFile(this.storePath,JSON.stringify(t,null,2))}async get(t){return this.initialized||await this.init(),this.settings[t]}async set(t,e){this.initialized||await this.init(),this.settings[t]=e,await this.save()}async getAll(){return await this.init(),{...this.settings}}async update(t){this.initialized||await this.init(),this.settings={...this.settings,...t},await this.save()}async reset(){this.settings={...w},await this.save()}async resetKey(t){this.initialized||await this.init(),this.settings[t]=w[t],await this.save()}async getCustomSetting(t,e){return this.initialized||await this.init(),this.settings.customSettings?.[t]?.[e]}async setCustomSetting(t,e,i){this.initialized||await this.init(),this.settings.customSettings=this.settings.customSettings||{},this.settings.customSettings[t]=this.settings.customSettings[t]||{},this.settings.customSettings[t][e]=i,await this.save()}async getNamespaceSettings(t){return this.initialized||await this.init(),this.settings.customSettings?.[t]}async updateNamespaceSettings(t,e){this.initialized||await this.init(),this.settings.customSettings=this.settings.customSettings||{},this.settings.customSettings[t]=e,await this.save()}};async function S(){return new Promise((t,e)=>{let i=(0,u.createServer)();i.unref(),i.on("error",e),i.listen(0,()=>{let e=i.address().port;i.close(()=>t(e))})})}var b=class{actionServerPort;actionServerProcess;async send(t){this.actionServerPort||(this.actionServerPort=await S(),this.actionServerProcess=(0,d.fork)("./inbox-server.js",[this.actionServerPort.toString()])),t.actions&&(t.actions=t.actions.map(t=>{let e=crypto.randomUUID();return{label:t.label,action:e,port:this.actionServerPort,callback:t.callback}}));try{return(await fetch("http://localhost:11435/inbox",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...t,type:"inbox",actionServerPort:this.actionServerPort})})).ok}catch(t){return console.error("failed to send inbox message:",t),!1}}},v=class{async list(){try{let t=await fetch("http://localhost:3030/pipes/list",{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)throw Error(`http error! status: ${t.status}`);return{success:!0,data:(await t.json()).data}}catch(t){return console.error("failed to list pipes:",t),{success:!1,error:t}}}async download(t){try{let e=await fetch("http://localhost:3030/pipes/download",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:t})});if(!e.ok)throw Error(`http error! status: ${e.status}`);return{success:!0,data:(await e.json()).data}}catch(t){return console.error("failed to download pipe:",t),{success:!1,error:t}}}async enable(t){try{return(await fetch("http://localhost:3030/pipes/enable",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pipe_id:t})})).ok}catch(t){return console.error("failed to enable pipe:",t),!1}}async disable(t){try{return(await fetch("http://localhost:3030/pipes/disable",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pipe_id:t})})).ok}catch(t){return console.error("failed to disable pipe:",t),!1}}async update(t,e){try{return(await fetch("http://localhost:3030/pipes/update",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pipe_id:t,config:e})})).ok}catch(t){return console.error("failed to update pipe:",t),!1}}async info(t){try{let e=await fetch(`http://localhost:3030/pipes/info/${t}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)throw Error(`http error! status: ${e.status}`);return{success:!0,data:(await e.json()).data}}catch(t){return console.error("failed to get pipe info:",t),{success:!1,error:t}}}async downloadPrivate(t,e,i){try{let s=await fetch("http://localhost:3030/pipes/download-private",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:t,pipe_name:e,pipe_id:i})});if(!s.ok)throw Error(`http error! status: ${s.status}`);return{success:!0,data:(await s.json()).data}}catch(t){return console.error("failed to download private pipe:",t),{success:!1,error:t}}}async delete(t){try{return(await fetch("http://localhost:3030/pipes/delete",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pipe_id:t})})).ok}catch(t){return console.error("failed to delete pipe:",t),!1}}},j=!1,P=null;function k(t,e){!j&&P&&(P.init("phc_Bt8GoTBPgkCpDrbaIZzJIEYt0CrJjhBiuLaBck1clce",{api_host:"https://eu.i.posthog.com",distinct_id:t,email:e}),P.identify(t,{email:e}),j=!0)}async function A(t,e){if(!P)return;k(e?.distinct_id,e?.email);let{distinct_id:i,...s}=e||{};P.capture(t,s)}async function x(t,e){if(!P)return;k(e?.distinct_id,e?.email);let{distinct_id:i,...s}=e||{};P.capture(t,{feature:"main",...s})}P={init:h.Ay.init.bind(h.Ay),identify:h.Ay.identify.bind(h.Ay),capture:h.Ay.capture.bind(h.Ay)};var N=new class{analyticsInitialized=!1;analyticsEnabled=!0;input={type:t=>this.sendInputControl({type:"WriteText",data:t}),press:t=>this.sendInputControl({type:"KeyPress",data:t}),moveMouse:(t,e)=>this.sendInputControl({type:"MouseMove",data:{x:t,y:e}}),click:t=>this.sendInputControl({type:"MouseClick",data:t})};settings=new m;inbox=new b;pipes=new v;async sendDesktopNotification(t){await this.initAnalyticsIfNeeded();try{return await fetch("http://localhost:11435/notify",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}),await A("notification_sent",{success:!0}),!0}catch(t){return console.error("failed to send notification:",t),!1}}async sendInputControl(t){await this.initAnalyticsIfNeeded();let e=process.env.SCREENPIPE_SERVER_URL||"http://localhost:3030";try{let i=await fetch(`${e}/experimental/input_control`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:t})});if(!i.ok)throw Error(`http error! status: ${i.status}`);return(await i.json()).success}catch(t){return console.error("failed to control input:",t),!1}}async queryScreenpipe(t){await this.initAnalyticsIfNeeded();let e=new URLSearchParams;Object.entries(t).forEach(([t,i])=>{if(void 0!==i&&""!==i){if("speakerIds"===t&&Array.isArray(i))i.length>0&&e.append(f(t),i.join(","));else{let s=f(t);e.append(s,i.toString())}}});let i=`http://localhost:3030/search?${e}`;try{let e=await fetch(i);if(!e.ok){let t=await e.text(),i;try{i=JSON.parse(t),console.error("screenpipe api error:",{status:e.status,error:i})}catch{console.error("screenpipe api error:",{status:e.status,error:t})}throw Error(`http error! status: ${e.status}`)}let s=await e.json();return await A("search_performed",{content_type:t.contentType,result_count:s.pagination.total}),function t(e){return Array.isArray(e)?e.map(t):null!==e&&"object"==typeof e?Object.keys(e).reduce((i,s)=>(i[s.replace(/([-_][a-z])/g,t=>t.toUpperCase().replace("-","").replace("_",""))]=t(e[s]),i),{}):e}(s)}catch(t){throw console.error("error querying screenpipe:",t),t}}async initAnalyticsIfNeeded(){if(this.analyticsInitialized)return;let t=await this.settings.getAll();this.analyticsEnabled=t.analyticsEnabled,t.analyticsEnabled&&(this.analyticsInitialized=!0)}async captureEvent(t,e){if(!this.analyticsEnabled)return;await this.initAnalyticsIfNeeded();let i=await this.settings.getAll();return A(t,{distinct_id:i.user.id,email:i.user.email,...e})}async captureMainFeatureEvent(t,e){if(this.analyticsEnabled)return await this.initAnalyticsIfNeeded(),x(t,e)}},E=i(2190),O=i(9021);let T="nodejs",_="force-dynamic";async function C(){try{let t=N.settings;if(!t)throw Error("settingsManager not found");let e=__filename,i=e.indexOf("pipes"),s=e.substring(i+6).split(l().sep)[0];console.log(`loading settings for pipe: ${s}`);let a=process.env.SCREENPIPE_DIR||process.cwd(),r=l().join(a,"pipes",s,"pipe.json");try{let e=await O.promises.readFile(r,"utf8"),i=JSON.parse(e);console.log(`loaded persisted settings from ${r}`);let a=await t.getAll();return E.NextResponse.json({...a,customSettings:{...a.customSettings,[s]:{...a.customSettings?.[s]||{},...i}}})}catch(i){console.log(`no persisted settings found at ${r}, using defaults`);let e=await t.getAll();return E.NextResponse.json(e)}}catch(t){return console.error("failed to get settings:",t),E.NextResponse.json({error:"failed to get settings"},{status:500})}}async function I(t){try{let e=N.settings;if(!e)throw Error("settingsManager not found");let{key:i,value:s,isPartialUpdate:a,reset:r,namespace:n}=await t.json();if(r)return n?i?await e.setCustomSetting(n,i,void 0):await e.updateNamespaceSettings(n,{}):i?await e.resetKey(i):await e.reset(),E.NextResponse.json({success:!0});if(n){if(a){let t=await e.getNamespaceSettings(n)||{};await e.updateNamespaceSettings(n,{...t,...s})}else await e.setCustomSetting(n,i,s)}else if(a){let t=JSON.parse(JSON.stringify(s));await e.update(t)}else{let t=JSON.parse(JSON.stringify(s));await e.set(i,t)}return E.NextResponse.json({success:!0})}catch(t){return console.error("failed to update settings:",t),E.NextResponse.json({error:"failed to update settings"},{status:500})}}let J=new a.AppRouteRouteModule({definition:{kind:r.RouteKind.APP_ROUTE,page:"/api/settings/route",pathname:"/api/settings",filename:"route",bundlePath:"app/api/settings/route"},resolvedPagePath:"C:\\Users\\26dwi\\ssdlc-pipe\\app\\api\\settings\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:R,workUnitAsyncStorage:q,serverHooks:z}=J;function M(){return(0,n.patchFetch)({workAsyncStorage:R,workUnitAsyncStorage:q})}},9748:t=>{"use strict";t.exports=require("fs/promises")}};var e=require("../../../webpack-runtime.js");e.C(t);var i=t=>e(e.s=t),s=e.X(0,[719,580,501],()=>i(9620));module.exports=s})();